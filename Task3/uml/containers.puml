@startuml

!include ../c4/C4_Container.puml

title Диаграмма контейнеров (C4)"

AddRelTag("blue", $textColor="blue", $lineColor="blue")
AddRelTag("green", $textColor="green", $lineColor="green")
AddRelTag("purple", $textColor="purple", $lineColor="purple")



Person_Ext(Клиент, "Клиент", "Хочет открыть депозит")


System_Boundary(Банк, "Банк", "Банк") {


Person(Кредит_Бэкофис, "Сотрудник бэк-офиса по кредитам", "Обслуживает кредиты")
Person(Депозит_Бэкофис, "Сотрудник бэк-офиса по депозитам", "Обслуживает депозиты")
Person(ФронтОфис, "Сотрудник фронт-офиса", "Обслуживает клиентов в офисе")


Person(СпециалистКолЦентра, "Специалист кол-центра", "Обслуживает клиентов по телефону")
Container(Система_КолЦентра, "Система кол-центра","Система для обслуживания клиентов по телефону")

System_Boundary(СМС_Система, "СМС-Система", "СМС-Система") {

Container(СМС, "Система СМС-оповещения", "Java", "Система СМС-оповещения")
Container(БДСМС, "База данных системы СМС-оповещения", "PostgreSQL", "Хранит данные отправленных сообщений")
}

Container(Система_Справочников, "Система справочников", "Java","API для справочников")
Container(БД_Система_Справочников, "База данных справочников", "PostgreSQL","Хранит справочную информацию")
Container(Kafka, "Kafka", "Kafka", "Шина событий")

Container(APIGateway, "Api Gateway","Nginx",  "Проксирует запросы")

System_Boundary(Сайт, "Сайт", "Сайт") {
Container(СайтFront, "Сайт банка", "PHP", "Frontend для онлайн-обслуживания через сайт")
Container(СайтBackend, "Backend сайта банка", "React JS", "Backend для онлайн-обслуживания через сайт")
}

System_Boundary(ABCSystem, "ABC", "ABC") {
Container(ABC, "Монолит ядра системы ABC","Delphi",  "Монолитное ядро системы")
Container(ABCDB, "База данных системы ABC","Oracle",  "Хранит данные ABC")

Container(ABC_Депозиты, "Ядро системы по депозитам","Java",  "Ядро система для работы с депозитами")
Container(ABCDB_Депозиты, "База данных ABC по депозитам ","PostgreSQL",  "Хранит данные по депозитам")
}

System_Boundary(Интернет-банк, "Интернет-банк", "Интернет-банк") {
Container(ИнтернетБанк, "Интернет-банк","NET",  "Обслeживает клиентов через интернет-банк")
Container(БДИнтернетБанк, "Интернет-банк","MS SQL",  "Хранит данные интернет-банка")
}
}


Rel("Клиент", APIGateway, "Создать заявку на депозит")
Rel("APIGateway", СайтFront, "Создать заявку на депозит")
Rel("СайтFront", СайтBackend, "Создать заявку на депозит")
Rel_R("СайтBackend", Kafka, "Создать заявку на депозит")

Rel("Клиент", "APIGateway", "Создать заявку на депозит")
Rel("APIGateway", "ИнтернетБанк", "Создать заявку на депозит")
Rel("ИнтернетБанк", "Kafka", "Создать заявку на депозит")
Rel("ИнтернетБанк", БДИнтернетБанк, "Записать данные")

Rel(Кредит_Бэкофис, ABC, "Обновить ставки по кредитам")
Rel(Депозит_Бэкофис, ABC_Депозиты, "Обновить ставки по депозитам")

Rel(ABC_Депозиты, Kafka, "Считать событие по депозиту")
Rel(ABC_Депозиты, ABCDB_Депозиты, "Сохранить данные по депозитам")
Rel(ABC, ABCDB, "Сохранить данные")

Rel(ABC_Депозиты, Система_Справочников, "Получить справочные данные")
Rel(ABC, Система_Справочников, "Получить справочные данные")
Rel(ABC_Депозиты, Kafka, "Отправить оповещение")
Rel_R(Kafka, СМС, "Считать оповещение")
Rel(СМС, Клиент, "Отправить СМС")
Rel(СМС, БДСМС, "Записать данные об отправке СМС")


Rel(Система_Справочников, БД_Система_Справочников, "Получить информацию")

Rel(Клиент, "APIGateway", "Создать заявку на депозит")
Rel(APIGateway, Система_КолЦентра, "Создать заявку на депозит")
Rel(СпециалистКолЦентра, Система_КолЦентра, "Создать заявку от клинта")
Rel(Система_КолЦентра, ABC, "Передать заявку клиента")
Rel(Система_КолЦентра, Kafka, "Передать заявку клиента на депозит")

Rel(ФронтОфис, ABC, "Первичная идентификация клиента, обработка запросов клиента")

@enduml